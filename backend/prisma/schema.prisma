// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int      @id @default(autoincrement())
  first_name       String
  last_name        String
  date_of_birth    DateTime
  created_at       DateTime @default(now())
  email            String   @unique
  street_address_1 String
  street_address_2 String?
  city             String
  state            String
  zip_code         String
  reviews          Review[]

  @@map("users")
}

model Review {
  id          Int      @id @default(autoincrement())
  description String
  rating      Int
  author      User     @relation(fields: [authorId], references: [id])
  authorId    Int
  location    Location @relation(fields: [locationId], references: [id])
  locationId  Int
  date        DateTime @default(now())

  @@map("reviews")
}

model Location {
  id               Int                @id @default(autoincrement())
  name             String
  created_at       DateTime           @default(now())
  street_address_1 String
  street_address_2 String?
  city             String
  state            String
  zip_code         String
  categories       CategoryLocation[]
  Review           Review[]

  @@map("locations")
}

model Category {
  id        Int                @id @default(autoincrement())
  name      String
  locations CategoryLocation[]

  @@map("categories")
}

model CategoryLocation {
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  location   Location @relation(fields: [locationId], references: [id])
  locationId Int

  @@id([categoryId, locationId])
  @@map("categories_locations")
}
